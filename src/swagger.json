{
  "openapi": "3.0.0",
  "info": {
    "title": "Kanban API",
    "version": "1.0.0",
    "description": "API documentation for the Kanban application."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Project": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Auto-incrementing ID of the project",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the project",
            "example": "Project of UniAnchieta"
          }
        }
      },
      "Task": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Auto-incrementing ID of the task",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of the task",
            "example": "Design the homepage"
          },
          "status": {
            "type": "string",
            "description": "Status of the task",
            "enum": ["pending", "in_progress", "done"],
            "default": "pending",
            "example": "pending"
          },
          "projectId": {
            "type": "integer",
            "description": "ID of the project the task belongs to",
            "example": 1
          }
        }
      },
      "UserCredentials": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username of the user",
            "example": "your_username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Password of the user",
            "example": "your_password"
          }
        }
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT authentication token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "User registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCredentials" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessMessage" }
              }
            }
          },
          "409": {
            "description": "Username already taken"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Authenticate a user and obtain a JWT token",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "User credentials for authentication",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCredentials" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthToken" }
              }
            }
          },
          "401": {
            "description": "Authentication failed"
          }
        }
      }
    },
    "/projects": {
      "post": {
        "summary": "Create a new project",
        "tags": ["Projects"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "description": "Project object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Project" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "Retrieve all projects",
        "tags": ["Projects"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of projects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Project" }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}/tasks": {
      "post": {
        "summary": "Add a new task to a project",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Task object to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the task",
                    "example": "Design the homepage"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task added successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "Retrieve all tasks of a project",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Task" }
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/projects/{projectId}/tasks/{taskId}": {
      "put": {
        "summary": "Update a task within a project",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Updated task data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Updated name of the task",
                    "example": "Update the homepage design"
                  },
                  "status": {
                    "type": "string",
                    "description": "Updated status of the task",
                    "enum": ["pending", "in_progress", "done"],
                    "example": "in_progress"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Task" }
              }
            }
          },
          "404": {
            "description": "Task or project not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a task from a project",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "ID of the task",
            "required": true,
            "schema": { "type": "integer" },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                },
                "example": {
                  "message": "Task deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Task or project not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "example": { "error": "Task not found" }
              }
            }
          }
        }
      }
    }
  }
}
